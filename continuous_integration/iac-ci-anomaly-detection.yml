pool:
  name: Azure Pipelines
  vmImage: ubuntu-18.04

variables:
- group: mlops-wsh-vg

steps:

- task: UsePythonVersion@0
  displayName: 'Use Python 3.6'
  inputs:
    versionSpec: 3.6

- task: Bash@3
  displayName: 'Install Python Requirements'
  inputs:
    targetType: filePath
    filePath: './package_requirement/install_requirements.sh'
    workingDirectory: 'package_requirement'

- bash:
  env:
    KEY_VAULT_NAME: $(azureml.keyvaultName)
    AZURE_CLIENT_ID: $(azureml.azureClient)
    AZURE_TENANT_ID: $(azureml.tenantID)
    AZURE_CLIENT_SECRET: $(azureml.clientSecret)
  displayName: 'Setting up Environment Variable'

     
- task: AzureCLI@2
  displayName: 'Login using service principal'
  inputs:
    azureSubscription: 'azure-resource-connection'
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: 'az login --service-principal --username $(AZURE_CLIENT_ID) --password $(AZURE_CLIENT_SECRET) --tenant $(AZURE_TENANT_ID)'

- script: python training/prepare_dataset.py --kv_name $(KEY_VAULT_NAME)
  displayName: 'Register datasets'

- task: AzureCLI@2
  displayName: 'Install Azure ML CLI'
  inputs:
    azureSubscription: 'azure-resource-connection'
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: 'az extension add -n azure-cli-ml'

- task: AzureCLI@2
  displayName: 'Azure ML Compute Cluster'
  inputs:
    azureSubscription: 'azure-resource-connection'
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: 'az ml computetarget create amlcompute -g $(azureml.resourceGroup) -w $(azureml.workspaceName) -n $(amlcompute.clusterName) -s $(amlcompute.vmSize) --min-nodes $(amlcompute.minNodes) --max-nodes $(amlcompute.maxNodes) --idle-seconds-before-scaledown $(amlcompute.idleSecondsBeforeScaledown) '

- bash: |
   mkdir metadata && mkdir models
   
  displayName: 'Make metadata and models directory'

- task: AzureCLI@2
  displayName: 'Training model'
  inputs:
    azureSubscription: 'azure-resource-connection'
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: 'az ml run submit-script -g $(azureml.resourceGroup) -w $(azureml.workspaceName) -e $(experiment.name) --ct $(amlcompute.clusterName) -d conda_dependencies.yml -c train_insurance -t ../metadata/run.json train_aml.py'
    workingDirectory: training

- task: AzureCLI@2
  displayName: 'Registering Model'
  inputs:
    azureSubscription: 'azure-resource-connection'
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: 'az ml model register -g $(azureml.resourceGroup) -w $(azureml.workspaceName) -n $(model.name) -f metadata/run.json --asset-path outputs/models/anomaly_predict.onnx -d "anomaly prediction" --tag "data"="anomaly" --tag "model"="prediction" -t metadata/model.json'

- task: AzureCLI@2
  displayName: 'Downloading model'
  inputs:
    azureSubscription: 'azure-resource-connection'
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: 'az ml model download -g $(azureml.resourceGroup) -w $(azureml.workspaceName) -i $(jq -r .modelId metadata/model.json) -t ./models --overwrite'

- task: CopyFiles@2
  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: |
     **/metadata/*
     **/models/*
     **/deployment_setup/*
     **/tests/integration/*
     **/package_requirement/*
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishPipelineArtifact@1
  displayName: 'Publish Pipeline Artifact'
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    artifact: hsd
